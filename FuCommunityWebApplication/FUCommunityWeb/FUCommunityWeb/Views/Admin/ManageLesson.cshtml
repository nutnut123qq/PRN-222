@model FuCommunityWebModels.ViewModels.CourseDetailVM

@{
    ViewData["Title"] = "Quản Lý Bài Học";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - FunnyCode</title>
    <link rel="shortcut icon" type="image/x-icon" href="/src/webapp/img/Logo.png">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Font Awesome for Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/src/webapp/css/style.css">
</head>

<body>
    <div class="container-fluid admin admin-manage">
        <div class="row">
            <!-- Sidebar -->
            @await Component.InvokeAsync("UserSidebar")

            <!-- Main Content -->
            <div class="col-md-10 content">
                <div class="d-flex flex-column">
                    <!-- Breadcrumb -->
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/admin/ManageCourse">Courses</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Manage Lessons</li>
                        </ol>
                    </nav>

                    <!-- Page Header and Actions -->
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2 class="dashboard-header mb-0">Manage Lesson For Course: @Model.Course.Title</h2>
                        <div class="mb-3 d-flex align-items-center">
                            <button class="btn btn-create" data-bs-toggle="modal" data-bs-target="#createLessonModal">
                                <i class="fas fa-plus me-2"></i>Add Lesson
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Display Success or Error Messages -->
                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["Success"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        @TempData["Error"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                <!-- Document Section -->
                <div class="document-section mb-4">
                    @if (Model.Course.DocumentID.HasValue)
                    {
                        var document = Model.Course.Document;
                        if (document != null)
                        {
                            <p><strong>Document:</strong> <a href="@document.FileUrl" download>@document.Name</a></p>
                        }
                    }
                    else
                    {
                        <p><strong>Document: </strong>No Document</p>
                    }
                </div>

                <!-- Lessons Table -->
                <div class="table-responsive">
                    <table class="table table-bordered table-striped align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>
                                    @Html.ActionLink("Title", "ManageLesson", new { courseId = Model.Course.CourseID, sortOrder = ViewData["TitleSortParm"] })
                                </th>
                                <th>Content</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var lesson in Model.Lessons)
                            {
                                <tr class="lesson-item">
                                    <td>@lesson.LessonID</td>
                                    <td class="lesson-info">@lesson.Title</td>
                                    <td>
                                        <button class="btn-toggle-content btn-sm collapsed" data-lesson-id="@lesson.LessonID">
                                            <i class="fas fa-chevron-right"></i>
                                        </button>
                                        <div class="lesson-content mt-2" id="lesson-content-@lesson.LessonID" style="display: none;">
                                            @Html.Raw(lesson.Content)
                                        </div>
                                    </td>
                                    <td class="lesson-status">
                                        @if (lesson.Status == "Active")
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        <button class="btn btn-warning btn-sm edit-lesson-btn" data-lesson-id="@lesson.LessonID">
                                            <i class="fas fa-edit me-1"></i>Edit
                                        </button>
                                        <button class="btn btn-danger btn-sm delete-lesson-btn" data-lesson-id="@lesson.LessonID" data-lesson-title="@lesson.Title">
                                            <i class="fas fa-trash-alt me-1"></i>Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Reviews Section -->
                <div class="reviews mt-4">
                    <h4>Review</h4>
                    <table class="table table-bordered table-striped align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>User</th>
                                <th>Rating</th>
                                <th>Content</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.Reviews.Any())
                            {
                                <tr>
                                    <td colspan="4" class="text-center">No comment</td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var review in Model.Reviews)
                                {
                                    <tr>
                                        <td>@review.User.UserName</td>
                                        <td>
                                            @for (int i = 0; i < review.Rating; i++)
                                            {
                                                <i class="fas fa-star text-warning"></i>
                                            }
                                            @for (int i = review.Rating; i < 5; i++)
                                            {
                                                <i class="far fa-star text-warning"></i>
                                            }
                                        </td>
                                        <td>@review.Content</td>
                                        <td>
                                            <button class="btn btn-danger btn-sm delete-review-btn" data-review-id="@review.ReviewID" data-review-content="@review.Content">
                                                <i class="fas fa-trash-alt me-1"></i>Delete
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Delete Review Modal -->
                <div class="modal fade" id="deleteReviewModal" tabindex="-1" aria-labelledby="deleteReviewModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <form asp-action="DeleteReview" asp-controller="Admin" method="post">
                                @Html.AntiForgeryToken()
                                <div class="modal-header">
                                    <h5 class="modal-title" id="deleteReviewModalLabel">Confirm Delete</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    Are you sure to delete this review?
                                </div>
                                <div class="modal-footer">
                                    <input type="hidden" name="reviewId" id="deleteReviewId" />
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-danger">Delete</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Create Lesson Modal -->
    <div class="modal fade" id="createLessonModal" tabindex="-1" aria-labelledby="createLessonModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="CreateLesson" asp-controller="Admin" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="createLessonModalLabel">Add New Lesson</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <!-- Validation Summary -->
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <!-- Hidden CourseID -->
                        @Html.HiddenFor(m => m.CreateLessonVM.CourseID)

                        <!-- Title -->
                        <div class="mb-3">
                            <label asp-for="CreateLessonVM.Title" class="form-label">Title</label>
                            <input asp-for="CreateLessonVM.Title" class="form-control" required />
                            <span asp-validation-for="CreateLessonVM.Title" class="text-danger"></span>
                        </div>

                        <!-- Content -->
                        <div class="mb-3">
                            <label asp-for="CreateLessonVM.Content" class="form-label">Content</label>
                            <textarea asp-for="CreateLessonVM.Content" class="form-control" rows="5" required></textarea>
                            <span asp-validation-for="CreateLessonVM.Content" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Add lesson</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Lesson Modal -->
    <div class="modal fade" id="editLessonModal" tabindex="-1" aria-labelledby="editLessonModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="EditLesson" asp-controller="Admin" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="editLessonModalLabel">Edit Lesson</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <!-- Validation Summary -->
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <!-- Hidden LessonID và CourseID -->
                        @Html.HiddenFor(m => m.EditLessonVM.LessonID)
                        @Html.HiddenFor(m => m.EditLessonVM.CourseID)

                        <!-- Title -->
                        <div class="mb-3">
                            <label asp-for="EditLessonVM.Title" class="form-label">Title</label>
                            <input asp-for="EditLessonVM.Title" class="form-control" required />
                            <span asp-validation-for="EditLessonVM.Title" class="text-danger"></span>
                        </div>

                        <!-- Content -->
                        <div class="mb-3">
                            <label asp-for="EditLessonVM.Content" class="form-label">Content</label>
                            <textarea asp-for="EditLessonVM.Content" class="form-control" rows="5" required></textarea>
                            <span asp-validation-for="EditLessonVM.Content" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Lesson Modal -->
    <div class="modal fade" id="deleteLessonModal" tabindex="-1" aria-labelledby="deleteLessonModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="DeleteLesson" asp-controller="Admin" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteLessonModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure to delete course "<strong id="deleteLessonTitle"></strong>"? This action can not be undo.
                    </div>
                    <div class="modal-footer">
                        @Html.Hidden("lessonId", "", new { id = "deleteLessonId" })
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Handle Toggle Content
            const toggleButtons = document.querySelectorAll(".btn-toggle-content");

            toggleButtons.forEach(button => {
                button.addEventListener("click", function () {
                    const lessonId = this.getAttribute("data-lesson-id");
                    const contentDiv = document.getElementById(`lesson-content-${lessonId}`);
                    const icon = this.querySelector('i');

                    if (contentDiv.style.display === "none" || contentDiv.style.display === "") {
                        contentDiv.style.display = "block";
                        this.classList.remove("collapsed");
                        this.classList.add("expanded");
                        // Change icon to down arrow
                        icon.classList.remove("fa-chevron-right");
                        icon.classList.add("fa-chevron-down");
                    } else {
                        contentDiv.style.display = "none";
                        this.classList.remove("expanded");
                        this.classList.add("collapsed");
                        // Change icon to right arrow
                        icon.classList.remove("fa-chevron-down");
                        icon.classList.add("fa-chevron-right");
                    }
                });
            });

            // Handle Edit Lesson Modal
            const editLessonButtons = document.querySelectorAll(".edit-lesson-btn");
            const editLessonModal = document.getElementById("editLessonModal");

            editLessonButtons.forEach(function (button) {
                button.addEventListener("click", function () {
                    const lessonId = this.getAttribute("data-lesson-id");
                    const lessonItem = this.closest('.lesson-item');
                    const title = lessonItem.querySelector('.lesson-info').textContent.trim();
                    const content = lessonItem.querySelector('.lesson-content').innerHTML.trim();
                    const status = lessonItem.querySelector('.lesson-status').textContent.trim();

                    // Populate the edit modal fields
                    editLessonModal.querySelector("input[name='EditLessonVM.LessonID']").value = lessonId;
                    editLessonModal.querySelector("input[name='EditLessonVM.Title']").value = title;
                    editLessonModal.querySelector("textarea[name='EditLessonVM.Content']").value = content;

                    // Show the modal
                    const bootstrapModal = new bootstrap.Modal(editLessonModal);
                    bootstrapModal.show();
                });
            });

            // Handle Delete Lesson Modal
            const deleteLessonButtons = document.querySelectorAll(".delete-lesson-btn");
            const deleteLessonModal = document.getElementById("deleteLessonModal");

            deleteLessonButtons.forEach(function (button) {
                button.addEventListener("click", function () {
                    const lessonId = this.getAttribute("data-lesson-id");
                    const lessonTitle = this.getAttribute("data-lesson-title");

                    // Update the delete modal content
                    deleteLessonModal.querySelector("#deleteLessonTitle").textContent = lessonTitle;
                    deleteLessonModal.querySelector("#deleteLessonId").value = lessonId;

                    // Show the modal
                    const bootstrapModal = new bootstrap.Modal(deleteLessonModal);
                    bootstrapModal.show();
                });
            });

            // Handle Delete Review Modal
            const deleteReviewButtons = document.querySelectorAll(".delete-review-btn");
            const deleteReviewModal = document.getElementById("deleteReviewModal");

            deleteReviewButtons.forEach(function (button) {
                button.addEventListener("click", function () {
                    const reviewId = this.getAttribute("data-review-id");

                    // Update the delete modal content
                    deleteReviewModal.querySelector("#deleteReviewId").value = reviewId;

                    // Show the modal
                    const bootstrapModal = new bootstrap.Modal(deleteReviewModal);
                    bootstrapModal.show();
                });
            });
        });
    </script>

    @* Include Validation Scripts *@
    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }
</body>

</html>