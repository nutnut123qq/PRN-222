@model ForumVM

<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Categories - FunnyCode</title>
    <link rel="shortcut icon" type="x-icon" href="/src/webapp/img/Logo.png">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-ODn27RD6nA2R1Gz5glBa6kLtvCxFfUMaNf1oZVVobKq6yEJNXI9py/tFyR3/f+W" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    <!-- Font Awesome for Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/src/webapp/css/style.css">
</head>

<body>
    <div class="container-fluid admin admin-manage">
        <div class="row">
            <!-- Sidebar -->
            @await Component.InvokeAsync("UserSidebar")

            <!-- Main Content -->
            <div class="col-md-10 content">
                <div class="d-flex justify-content-between mb-3">
                    <h2 class="dashboard-header mb-0">Manage Forum Categories</h2>
                    <button class="btn-1" data-bs-toggle="modal" data-bs-target="#createCategoryModal">Create New Category</button>
                </div>
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Category Name</th>
                                <th>Description</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in Model.Categories.OrderByDescending(c => c.CategoryID))
                            {
                                <tr>
                                    <td>@category.CategoryName</td>
                                    <td>@category.Description</td>
                                    <td>
                                        <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#editCategoryModal" data-category-id="@category.CategoryID" data-category-name="@category.CategoryName" data-category-description="@category.Description">Edit</button>
                                        <form asp-action="DeleteCategory" asp-controller="Admin" method="post" class="d-inline">
                                            <input type="hidden" name="categoryId" value="@category.CategoryID" />
                                            <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this category?');">Delete</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</body>

<!-- Create Category Modal -->
<div class="modal fade" id="createCategoryModal" tabindex="-1" aria-labelledby="createCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createCategoryModalLabel">Create New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="CreateCategory" method="post">
                    <div class="form-group">
                        <label asp-for="CreateCategory.CategoryName"></label>
                        <input asp-for="CreateCategory.CategoryName" class="form-control" />
                        <span asp-validation-for="CreateCategory.CategoryName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="CreateCategory.Description"></label>
                        <textarea asp-for="CreateCategory.Description" class="form-control"></textarea>
                        <span asp-validation-for="CreateCategory.Description" class="text-danger"></span>
                    </div>
                    <br />
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn-blue">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="EditCategory" method="post">
                    <input type="hidden" id="editCategoryId" name="EditCategory.CategoryID" />
                    <div class="form-group">
                        <label asp-for="EditCategory.CategoryName"></label>
                        <input id="editCategoryName" name="EditCategory.CategoryName" class="form-control" />
                        <span asp-validation-for="EditCategory.CategoryName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="EditCategory.Description"></label>
                        <textarea id="editCategoryDescription" name="EditCategory.Description" class="form-control"></textarea>
                        <span asp-validation-for="EditCategory.Description" class="text-danger"></span>
                    </div>
                    <br />
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn-blue">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Script for validating Create Category form
        var createCategoryForm = document.querySelector('#createCategoryModal form');

        if (createCategoryForm) {
            createCategoryForm.addEventListener('submit', function (event) {
                var isValid = true;

                var createCategoryName = createCategoryForm.querySelector('[name="CreateCategory.CategoryName"]');
                var createCategoryDescription = createCategoryForm.querySelector('[name="CreateCategory.Description"]');

                clearValidationMessagesCreate();

                if (createCategoryName.value.trim() === '') {
                    showValidationMessageCreate(createCategoryName, 'Category Name cannot be empty');
                    isValid = false;
                }

                if (createCategoryDescription.value.trim() === '') {
                    showValidationMessageCreate(createCategoryDescription, 'Description cannot be empty');
                    isValid = false;
                }

                if (!isValid) {
                    event.preventDefault();
                    console.log("Form is not valid, preventing submission.");
                } else {
                    console.log("Form is valid, submitting...");
                }
            });

            function showValidationMessageCreate(inputElement, message) {
                var errorMessage = document.createElement('span');
                errorMessage.classList.add('text-danger');
                errorMessage.textContent = message;
                inputElement.closest('.form-group').appendChild(errorMessage);
            }

            function clearValidationMessagesCreate() {
                var errorMessages = createCategoryForm.querySelectorAll('.text-danger');
                errorMessages.forEach(function (message) {
                    message.remove();
                });
            }
        }

        // Script for validating Edit Category form
        var editCategoryForm = document.querySelector('#editCategoryModal form');

        if (editCategoryForm) {
            editCategoryForm.addEventListener('submit', function (event) {
                var isValid = true;

                var editCategoryName = document.getElementById('editCategoryName');
                var editCategoryDescription = document.getElementById('editCategoryDescription');

                clearValidationMessages();

                if (editCategoryName.value.trim() === '') {
                    showValidationMessage(editCategoryName, 'Vui lòng nhập title');
                    isValid = false;
                }

                if (editCategoryDescription.value.trim() === '') {
                    showValidationMessage(editCategoryDescription, 'Vui lòng nhập description');
                    isValid = false;
                }

                if (!isValid) {
                    event.preventDefault();
                }
            });

            function showValidationMessage(inputElement, message) {
                var errorMessage = document.createElement('span');
                errorMessage.classList.add('text-danger');
                errorMessage.textContent = message;
                inputElement.closest('.form-group').appendChild(errorMessage);
            }

            function clearValidationMessages() {
                var errorMessages = editCategoryForm.querySelectorAll('.text-danger');
                errorMessages.forEach(function (message) {
                    message.remove();
                });
            }
        }

        // Event listener for populating the Edit Category Modal
        var editCategoryModal = document.getElementById('editCategoryModal');
        if (editCategoryModal) {
            editCategoryModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var categoryId = button.getAttribute('data-category-id');
                var categoryName = button.getAttribute('data-category-name');
                var categoryDescription = button.getAttribute('data-category-description');

                var modalTitle = editCategoryModal.querySelector('.modal-title');
                var inputCategoryId = editCategoryModal.querySelector('#editCategoryId');
                var inputCategoryName = editCategoryModal.querySelector('#editCategoryName');
                var inputCategoryDescription = editCategoryModal.querySelector('#editCategoryDescription');

                modalTitle.textContent = 'Edit Category: ' + categoryName;
                inputCategoryId.value = categoryId;
                inputCategoryName.value = categoryName;
                inputCategoryDescription.value = categoryDescription;
            });
        }
    });
</script>




</html>
