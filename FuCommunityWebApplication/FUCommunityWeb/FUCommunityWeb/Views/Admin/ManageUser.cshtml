@model FuCommunityWebModels.ViewModels.ManageUserVM
@inject FuCommunityWebServices.Services.UserService _userService

@{
    ViewData["Title"] = "Manage User";
}

<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - FunnyCode</title>
    <link rel="shortcut icon" type="x-icon" href="/src/webapp/img/Logo.png">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-ODn27RD6nA2R1Gz5glBa6kLtvCxFfUMaNf1oZVVobKq6yEJNXI9py/tFyR3/f+W" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    <!-- Font Awesome for Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/src/webapp/css/style.css">
</head>

<body>
    <div class="container-fluid admin admin-manage">
        <div class="row">
            <!-- Sidebar -->
            @await Component.InvokeAsync("UserSidebar")

            <!-- Main Content -->
            <div class="col-md-10 content">
                <div class="d-flex flex-column">
                    <!-- Tìm kiếm 
                    <div class="input-group mb-3" style="max-width: 300px;">
                        <input type="text" class="form-control" placeholder="Search" id="searchInput">
                        <button class="btn btn-outline-secondary" type="button" id="searchButton"><i class="fas fa-search"></i></button>
                    </div>
                    -->

                    <!-- Tiêu đề Dashboard và các nút -->
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2 class="dashboard-header mb-0">Manage Users</h2>
                        <div class="mb-3 d-flex align-items-center">
                            <!--
                            <div class="me-2">
                                <div class="dropdown">
                                    <button class="btn btn-filter dropdown-toggle" type="button" id="filterDropdown"
                                            data-bs-toggle="dropdown" aria-expanded="false">
                                        Filter
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="filterDropdown">
                                        <li><a class="dropdown-item" href="#">By Name</a></li>
                                        <li><a class="dropdown-item" href="#">By ID</a></li>
                                        <li><a class="dropdown-item" href="#">By Number of Courses</a></li>
                                    </ul>
                                </div>
                            </div>
                            <button class="btn btn-delete" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                            -->
                        </div>
                    </div>
                </div>

                <!-- Hiển thị thông báo thành công hoặc lỗi -->
                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["Success"]
                    </div>
                }
                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["Error"]
                    </div>
                }

                <!-- Bảng danh sách người dùng -->
                <div class="table-responsive">
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <!--
                                <th><input type="checkbox" id="select-all"></th>
                                -->
                                <th>
                                    @Html.ActionLink("Name", "ManageUser", new { sortOrder = ViewData["NameSortParm"] })
                                </th>
                                <th>
                                    @Html.ActionLink("Email", "ManageUser", new { sortOrder = ViewData["EmailSortParm"] })
                                </th>
                                <th>
                                    @Html.ActionLink("Point", "ManageUser", new { sortOrder = ViewData["PointSortParm"] })
                                </th>
                                <th>DOB</th>
                                <th>Role</th>
                                <th>Settings</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Users.OrderByDescending(u => u.CreatedDate))
                            {
                                <tr>
                                    <!--
                                    <td><input type="checkbox" class="select-item"></td>
                                    -->
                                    <td>@user.FullName</td>
                                    <td>@user.Email</td>
                                    <td>@user.Point</td>
                                    <td>@user.DOB.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        @{
                                            var roles = await _userService.GetUserRolesAsync(user.Id);
                                            var roleDisplay = string.Join(", ", roles);
                                        }
                                        @roleDisplay
                                    </td>
                                    <td>
                                        @if (user.Ban)
                                        {
                                            <i class="fas fa-unlock table-settings me-2" data-bs-toggle="modal"
                                               data-bs-target="#unbanModal" data-user-id="@user.Id"
                                               data-fullname="@user.FullName"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-ban table-settings me-2" data-bs-toggle="modal"
                                               data-bs-target="#banModal" data-user-id="@user.Id"
                                               data-fullname="@user.FullName"></i>
                                        }
                                        <i class="fas fa-trash table-settings  me-2" data-bs-toggle="modal"
                                           data-bs-target="#deleteModal" data-user-id="@user.Id"
                                           data-fullname="@user.FullName"></i>
                                        @{
                                            var isMentor = await _userService.IsUserInRoleAsync(user.Id, "Mentor");
                                            var isAdmin = await _userService.IsUserInRoleAsync(user.Id, "Admin");
                                        }

                                        @if (!isAdmin)
                                        {
                                            @if (isMentor)
                                            {
                                                <i class="fas fa-arrow-down table-settings" data-bs-toggle="modal" data-bs-target="#demoteModal" data-user-id="@user.Id" data-fullname="@user.FullName"></i>
                                            }
                                            else
                                            {
                                                <i class="fas fa-arrow-up table-settings" data-bs-toggle="modal" data-bs-target="#promoteModal" data-user-id="@user.Id" data-fullname="@user.FullName"></i>
                                            }
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Xác Nhận Ban -->
    <div class="modal fade" id="banModal" tabindex="-1" aria-labelledby="banModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="BanUser" asp-controller="Admin" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="banModalLabel">Confirm Ban</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="userId" id="banUserID" />
                        Are you sure you want to ban the user "<strong id="banUserFullName"></strong>"?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn-del">Ban</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal Xác Nhận Xóa -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="DeleteUser" asp-controller="Admin" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="userId" id="deleteUserID" />
                        Are you sure you want to delete the user "<strong id="deleteUserFullName"></strong>"?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn-del">Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal Xác Nhận Unban -->
    <div class="modal fade" id="unbanModal" tabindex="-1" aria-labelledby="unbanModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="UnbanUser" asp-controller="Admin" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="unbanModalLabel">Confirm Unban</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="userId" id="unbanUserID" />
                        Are you sure you want to unban the user "<strong id="unbanUserFullName"></strong>"?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn-blue">Unban</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal Xác Nhận Thăng Cấp -->
    <div class="modal fade" id="promoteModal" tabindex="-1" aria-labelledby="promoteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="PromoteToMentor" asp-controller="Admin" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="promoteModalLabel">Confirm Upgrade</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="userId" id="promoteUserID" />
                        Are you sure you want to upgrade the user "<strong id="promoteUserFullName"></strong>"?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn-blue">Upgrade</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal Xác Nhận Hạ Cấp -->
    <div class="modal fade" id="demoteModal" tabindex="-1" aria-labelledby="demoteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="DemoteToStudent" asp-controller="Admin" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="demoteModalLabel">Confirm Downgrade</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="userId" id="demoteUserID" />
                        Are you sure you want to downgrade the user "<strong id="demoteUserFullName"></strong>"?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn-del">Downgrade</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Xử lý khi mở Modal Ban
            const banModal = document.getElementById('banModal');
            banModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const userId = button.getAttribute('data-user-id');
                const fullName = button.getAttribute('data-fullname');

                // Gán giá trị cho các trường trong form
                banModal.querySelector('#banUserID').value = userId;
                banModal.querySelector('#banUserFullName').textContent = fullName;
            });

            // Xử lý khi mở Modal Unban
            const unbanModal = document.getElementById('unbanModal');
            unbanModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const userId = button.getAttribute('data-user-id');
                const fullName = button.getAttribute('data-fullname');

                // Gán giá trị cho các trường trong form
                unbanModal.querySelector('#unbanUserID').value = userId;
                unbanModal.querySelector('#unbanUserFullName').textContent = fullName;
            });

            // Xử lý khi mở Modal Xóa
            const deleteModal = document.getElementById('deleteModal');
            deleteModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const userId = button.getAttribute('data-user-id');
                const fullName = button.getAttribute('data-fullname');

                // Gán giá trị cho các trường trong form
                deleteModal.querySelector('#deleteUserID').value = userId;
                deleteModal.querySelector('#deleteUserFullName').textContent = fullName;
            });

            // Xử lý chọn tất cả các checkbox
            const selectAllCheckbox = document.getElementById('select-all');
            const itemCheckboxes = document.querySelectorAll('.select-item');

            selectAllCheckbox.addEventListener('change', function () {
                itemCheckboxes.forEach(function (checkbox) {
                    checkbox.checked = selectAllCheckbox.checked;
                });
            });

            // Xử lý tìm kiếm khi nhấn nút tìm kiếm hoặc nhấn Enter
            const searchButton = document.getElementById('searchButton');
            const searchInput = document.getElementById('searchInput');

            searchButton.addEventListener('click', function () {
                const query = searchInput.value.trim();
                window.location.href = '@Url.Action("ManageUser", "Admin")' + '?search=' + encodeURIComponent(query);
            });

            searchInput.addEventListener('keypress', function (e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    searchButton.click();
                }
            });
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Xử lý khi mở Modal Thăng Cấp
            const promoteModal = document.getElementById('promoteModal');
            promoteModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const userId = button.getAttribute('data-user-id');
                const fullName = button.getAttribute('data-fullname');

                // Gán giá trị cho các trường trong form
                promoteModal.querySelector('#promoteUserID').value = userId;
                promoteModal.querySelector('#promoteUserFullName').textContent = fullName;
            });

            // Xử lý khi mở Modal Hạ Cấp
            const demoteModal = document.getElementById('demoteModal');
            demoteModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const userId = button.getAttribute('data-user-id');
                const fullName = button.getAttribute('data-fullname');

                // Gán giá trị cho các trường trong form
                demoteModal.querySelector('#demoteUserID').value = userId;
                demoteModal.querySelector('#demoteUserFullName').textContent = fullName;
            });
        });
    </script>

    @* Bao gồm các script xác thực *@
    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }

</body>

</html>
