@model FuCommunityWebModels.ViewModels.PostVM

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <title>Manage Posts - FunnyCode</title>
    <link rel="shortcut icon" type="x-icon" href="/src/webapp/img/Logo.png">
    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Include Font Awesome for Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/src/webapp/css/style.css">
    <style>
        .cke_notification {
            display: none !important; 
        }
        </style>
</head>
<body>
    <div class="container-fluid admin admin-manage">
        <div class="row">
            <!-- Sidebar -->
            @await Component.InvokeAsync("UserSidebar")

            <!-- Main Content -->
            <div class="col-md-10 content">
                <div class="d-flex flex-column">
                    <h2 class="dashboard-header mb-0">Manage Posts</h2>

                    <div class="d-flex justify-content-between mb-3">
                        <a href="/admin/ManageForumCategory" class="btn-cancel-2" style="text-decoration: none;">Back</a>
                        <button class="btn-1" data-bs-toggle="modal" data-bs-target="#createPostModal">Create New Post</button>
                    </div>

                    <!-- Search form 
                    <div class="mb-3">
                        <input type="text" id="searchString" placeholder="Enter search keyword..." class="form-control" style="max-width: 300px; display: inline-block;" />
                        <button class="btn btn-secondary" id="searchButton">Search</button>
                    </div>
                    -->

                    <!-- Table of Posts -->
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Title</th>
                                    <th>Create Date</th>
                                    <th>Tags</th>
                                    <th>Type</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="postList">
                                @foreach (var post in Model.Posts.OrderByDescending(p => p.CreatedDate))
                                {
                                    <tr>
                                        <td>@Html.Raw(System.Net.WebUtility.HtmlDecode(post.Title))</td>
                                        <td>@post.CreatedDate?.ToString("yyyy-MM-dd")</td>
                                        <td>@Html.Raw(System.Net.WebUtility.HtmlDecode(post.Tag))</td>
                                        <td>@(post.Type == 1 ? "Blog" : "Question")</td>
                                        <td>@post.Status</td>
                                        <td>
                                            <a href="@Url.Action("ManagePostDetail", "Admin", new { postId = post.PostID })" class="btn btn-info btn-sm">View</a>
                                            <button class="btn btn-warning btn-sm editPostBtn" data-post-id="@post.PostID">Edit</button>
                                            <button class="btn btn-danger btn-sm deletePostBtn" data-post-id="@post.PostID">Delete</button>
                                            @if (post.Status == PostStatus.Pending.ToString())
                                            {
                                                <form asp-action="ApprovePost" asp-controller="Admin" method="post" style="display: inline;">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="postId" value="@post.PostID" />
                                                    <button type="submit" class="btn btn-success btn-sm">Approve</button>
                                                </form>
                                                <form asp-action="RejectPost" asp-controller="Admin" method="post" style="display: inline;">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="postId" value="@post.PostID" />
                                                    <button type="submit" class="btn btn-danger btn-sm">Reject</button>
                                                </form>
                                            }
                                        </td>
                                    </tr>
                                }
                                <!-- No posts message -->
                                @if (!Model.Posts.Any())
                                {
                                    <tr>
                                        <td colspan="5" class="text-center">No posts available.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination (if needed) -->
                    <!-- <nav aria-label="Page navigation">
                        <ul class="pagination">
                            <!-- Pagination links here -->
                    </ul>

                </div>
            </div>
        </div>
    </div>

    <!-- Modals -->
    <!-- Create Post Modal -->
    <div class="modal fade" id="createPostModal" tabindex="-1" aria-labelledby="createPostModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create New Post</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="createPostForm" asp-action="CreatePost" asp-controller="Admin" method="post" enctype="multipart/form-data">
                    <div class="modal-body">
                        <input type="hidden" asp-for="@Model.CreatePostVM.CategoryID" value="@Model.CategoryVM.CategoryID" />
                        <div class="mb-3">
                            <label for="postTitle" class="form-label">Title</label>
                            <input asp-for="@Model.CreatePostVM.Title" type="text" class="form-control" id="postTitle" required>
                        </div>
                        <div class="mb-3">
                            <label for="postTag" class="form-label">Tag</label>
                            <input asp-for="@Model.CreatePostVM.Tag" type="text" class="form-control" id="postTag" required>
                        </div>
                        <div class="mb-3">
                            <label for="postType" class="form-label">Type</label>
                            <select asp-for="@Model.CreatePostVM.Type" class="form-select" id="postType" required>
                                <option value="1">Blog</option>
                                <option value="2">Question</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="postContent" class="form-label">Content</label>
                            <textarea asp-for="@Model.CreatePostVM.Content" name="CreatePostVM.Content" class="form-control" id="postContent" rows="5" required></textarea>
                            <div class="invalid-feedback">
                                Content not allow empty
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="postImage" class="form-label">Image</label>
                            <input asp-for="@Model.CreatePostVM.PostImageFile" type="file" class="form-control" id="postImage" />
                        </div>
                        <div class="mb-3">
                            <label for="documentFile" class="form-label">Upload Document</label>
                            <input asp-for="@Model.CreatePostVM.DocumentFile" type="file" class="form-control" id="documentFile" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn-blue">Create Post</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Post Modal -->
    <div class="modal fade" id="editPostModal" tabindex="-1" aria-labelledby="editPostModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Post</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="editPostForm" asp-action="EditPost" asp-controller="Admin" method="post" enctype="multipart/form-data">
                    <div class="modal-body">
                        <input asp-for="Post.PostID" type="hidden" id="editPostID" />
                        <input type="hidden" asp-for="@Model.CreatePostVM.CategoryID" value="@Model.CategoryVM.CategoryID" />
                        <div class="mb-3">
                            <label for="editPostTitle" class="form-label">Title</label>
                            <input asp-for="Post.Title" type="text" class="form-control" id="editPostTitle" />
                        </div>
                        <div class="mb-3">
                            <label for="editPostTag" class="form-label">Tag</label>
                            <input asp-for="Post.Tag" class="form-control" id="editPostTag" />
                        </div>
                        <div class="mb-3">
                            <label for="editPostType" class="form-label">Type</label>
                            <select asp-for="@Model.CreatePostVM.Type" class="form-select" id="editPostType">
                                <option value="1">Blog</option>
                                <option value="2">Question</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="editPostContent" class="form-label">Content</label>
                            <textarea asp-for="Post.Content" class="form-control" id="editPostContent" rows="5"></textarea>
                            <div class="invalid-feedback">
                                Content not allow empty
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Current Post Image</label>
                            <div id="image-container">
                                <img src="" class="img-fluid mb-3" style="max-height: 200px;" />
                                <span id="no-image-label" class="text-muted" style="display: none;">No Image found</span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="editPostImage" class="form-label">Image</label>
                            <input asp-for="CreatePostVM.PostImageFile" type="file" id="editPostImage" />
                        </div>
                        <div class="mb-3">
                            <label for="editDocumentFile" class="form-label">Upload Document</label>
                            <input asp-for="CreatePostVM.DocumentFile" type="file" class="form-control" id="editDocumentFile" />
                            <div id="currentDocument">
                                @if (Model.Post.DocumentID.HasValue)
                                {
                                    var document = Model.Post.Document;
                                    if (document != null)
                                    {
                                        <p>Current Document: <a href="@document.FileUrl" download>@document.Name</a></p>
                                    }
                                }
                                else
                                {
                                    <p>No document uploaded.</p>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn-blue">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Post Modal -->
    <div class="modal fade" id="deletePostModal" tabindex="-1" aria-labelledby="deletePostModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="DeletePost" asp-controller="Admin" method="post">
                    <input type="hidden" asp-for="@Model.Post.PostID" value="" />
                    <input type="hidden" asp-for="@Model.CategoryVM.CategoryID" value="" />
                    <input type="hidden" asp-for="@Model.CategoryVM.CategoryName" value="" />
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this post?
                        <input type="hidden" name="postId" id="deletePostID" />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn-del">Delete</button>
                    </div>                
                </form>
            </div>
        </div>
    </div>

@section Scripts{
        <!-- Include Bootstrap JS and dependencies -->
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
        <!-- Include CKEditor -->
        <script src="https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js"></script>
        <script>
            // Initialize CKEditor for Create Post Modal
            $('#createPostModal').on('shown.bs.modal', function () {
                CKEDITOR.replace('postContent');
            });
            $('#createPostModal').on('hidden.bs.modal', function () {
                CKEDITOR.instances['postContent'].destroy(true);
            });

            $('#editPostModal').on('shown.bs.modal', function () {
                CKEDITOR.replace('editPostContent');
            });
            $('#editPostModal').on('hidden.bs.modal', function () {
                CKEDITOR.instances['editPostContent'].destroy(true);
            });

            // Edit Post Button Click
            $('.editPostBtn').click(function () {
                var postId = $(this).data('post-id');
                $.ajax({
                    url: '/Admin/GetPost',
                    type: 'GET',
                    data: { postId: postId },
                    success: function (data) {
                        $('#editPostID').val(data.postID);
                        $('#editPostTitle').val(data.title);
                        $('#editPostTag').val(data.tag);
                        $('#editPostType').val(data.type);

                        const decodeHTML = function (html) {
                            var txt = document.createElement("textarea");
                            txt.innerHTML = html;
                            return txt.value;
                        };
                        const decodedContent = decodeHTML(data.content);

                        if (CKEDITOR.instances['editPostContent']) {
                            CKEDITOR.instances['editPostContent'].setData(decodedContent);
                        } else {
                            $('#editPostContent').val(decodedContent);
                        }

                        // Kiểm tra URL của ảnh và cập nhật hiển thị
                        const postImage = data.postImage; // URL của ảnh từ server
                        const imgElement = $('#image-container img');
                        const noImageLabel = $('#no-image-label');

                        if (postImage && postImage !== "/uploads/gay.png") {
                            imgElement.attr('src', postImage).show();
                            noImageLabel.hide();
                        } else {
                            imgElement.hide();
                            noImageLabel.show();
                        }
                                                
                        if (data.document && data.document.fileUrl) {
                            $("#currentDocument").html(`<p>Current Document: <a href="${data.document.fileUrl}" download>${data.document.name}</a></p>`);
                        } else {
                            $("#currentDocument").html('<p>No document uploaded.</p>');
                        }

                        $('#editPostModal').modal('show');
                    },
                    error: function () {
                        alert('Failed to get post data.');
                    }
                });
            });

            // Delete Post Button Click
            $('.deletePostBtn').click(function () {
                var postId = $(this).data('post-id');
                $('#deletePostID').val(postId);
                $('#deletePostModal').modal('show');
            });

            // Search functionality
            $('#searchButton').click(function () {
                var searchString = $('#searchString').val().toLowerCase();
                $('#postList tr').each(function () {
                    var title = $(this).find('td').eq(0).text().toLowerCase();
                    if (title.indexOf(searchString) === -1) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    }
                });
            });

            $('#createPostForm').on('submit', function (e) {
                var content = CKEDITOR.instances['postContent'].getData(); 
                if (content === '') {
                    e.preventDefault(); 
                    $('#postContent').addClass('is-invalid'); 
                    $('#postContent').next('.invalid-feedback').removeClass('d-none'); 
                    return;
                } else {
                    $('#postContent').removeClass('is-invalid'); 
                    $('#postContent').next('.invalid-feedback').addClass('d-none'); 
                }
            });

            $('#editPostForm').on('submit', function (e) {
                var content = CKEDITOR.instances['editPostContent'].getData(); 
                if (content === '') {
                    e.preventDefault(); 
                    $('#editPostContent').addClass('is-invalid'); 
                    $('#editPostContent').next('.invalid-feedback').removeClass('d-none'); 
                    return;
                } else {
                    $('#editPostContent').removeClass('is-invalid'); 
                    $('#editPostContent').next('.invalid-feedback').addClass('d-none'); 
                }
            });

        </script>

        <script>
            $(document).on("click", ".deletePostBtn", function () {
                const postID = $(this).data("post-id");

                const urlParams = new URLSearchParams(window.location.search);
                const categoryID = urlParams.get('CategoryID');
                const categoryName = urlParams.get('CategoryName');

                // Populate the hidden inputs in the form with the post and category details
                $("input[name='Post.PostID']").val(postID);
                $("input[name='CategoryVM.CategoryID']").val(categoryID);
                $("input[name='CategoryVM.CategoryName']").val(categoryName);

                // Show the modal
                $("#deletePostModal").modal("show");
            });

        </script>
}
</body>
</html>
